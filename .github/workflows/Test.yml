name: Run_Tests

on: 
  push:
  # pull_request:
  #   branches: [ master ]

# env:
#   if: ${{ matrix.os }}  != "windows-latest"
#   SUDO_ALIAS: sudo
#   # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
#   BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac. 
    runs-on: ${{ matrix.os }} 
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-18.04, windows-latest, macos-10.15, macos-11.0]        
        build-type: [Debug, Release]

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        path: main

    - name: Checkout Catch
      uses: actions/checkout@v2
      with:
        repository: 'catchorg/Catch2'
        ref: 'v2.x'
        path: Catch2

    - name: Install Catch (*nix)
      if: matrix.os != 'windows-latest'
      run: |
        cd Catch2
        cmake -Bbuild -H. -DBUILD_TESTING=OFF
        sudo cmake --build build/ --target install

    - name: Install Catch (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd Catch2
        cmake -Bbuild -H. -DBUILD_TESTING=OFF
        cmake --build build/ --target install
      

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE/main/tests -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} 

    - name: Build
      working-directory: ${{runner.workspace}}/build
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE


    - name: Test
      working-directory: ${{runner.workspace}}/build
      # Execute tests defined by the CMake configuration. 
      run: cmake --build . --config $BUILD_TYPE --target test