name: Run_Tests

on: 
  pull_request:
    branches: [ master ]
  workflow_dispatch:
  schedule:
    # * is a special character in YAML so you have to quote this string
    # Run at midnight UTC every saturday- basically check to see if catch or github runners have broken the repo this week in a way that notifies me at the start of my weekend
    - cron:  '0 0 * * 6'  

jobs:
  build:
    runs-on: ${{ matrix.config.os }} 
    strategy:
      #if one test fails, it might do so uniquely- not stopping all tests when one fails can therefore give us more information in case multiple problems exist
      fail-fast: false
      matrix:
        #List all os/compiler/build_type configs. Sudo flag is used as a variable which is empty on windows runs (because windows can't sudo)
        config:  
          - { os: ubuntu-20.04,   name: Ubuntu 20 gcc 7 Debug,            cc: gcc-7.5,  cxx: g++-7,                                                    build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: ubuntu-20.04,   name: Ubuntu 20 gcc 7 Release,          cc: gcc-7.5,  cxx: g++-7,                                                    build_type: Release,   sudo: sudo, test_name: tests }
          - { os: ubuntu-20.04,   name: Ubuntu 20 gcc 8 Debug,            cc: gcc-8.4,  cxx: g++-8,                                                    build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: ubuntu-20.04,   name: Ubuntu 20 gcc 8 Release,          cc: gcc-8.4,  cxx: g++-8,                                                    build_type: Release,   sudo: sudo, test_name: tests }
          - { os: ubuntu-20.04,   name: Ubuntu 20 gcc 9 Debug,            cc: gcc-9.3,  cxx: g++-9,                                                    build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: ubuntu-20.04,   name: Ubuntu 20 gcc 9 Release,          cc: gcc-9.3,  cxx: g++-9,                                                    build_type: Release,   sudo: sudo, test_name: tests }
          - { os: ubuntu-20.04,   name: Ubuntu 20 gcc 10 Debug,           cc: gcc-10.2, cxx: g++-10,                                                   build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: ubuntu-20.04,   name: Ubuntu 20 gcc 10 Release,         cc: gcc-10.2, cxx: g++-10,                                                   build_type: Release,   sudo: sudo, test_name: tests }
          - { os: ubuntu-20.04,   name: Ubuntu 20 clang 8 Debug,          cc: clang-8,  cxx: clang++-8,                                                build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: ubuntu-20.04,   name: Ubuntu 20 clang 8 Release,        cc: clang-8,  cxx: clang++-8,                                                build_type: Release,   sudo: sudo, test_name: tests } 
          - { os: ubuntu-20.04,   name: Ubuntu 20 clang 9 Debug,          cc: clang-9,  cxx: clang++-9,                                                build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: ubuntu-20.04,   name: Ubuntu 20 clang 9 Release,        cc: clang-9,  cxx: clang++-9,                                                build_type: Release,   sudo: sudo, test_name: tests }
          - { os: ubuntu-20.04,   name: Ubuntu 20 clang 10 Debug,         cc: clang-10, cxx: clang++-10,                                               build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: ubuntu-20.04,   name: Ubuntu 20 clang 10 Release,       cc: clang-10, cxx: clang++-10,                                               build_type: Release,   sudo: sudo, test_name: tests }

          - { os: ubuntu-18.04,   name: Ubuntu 18 gcc 7 Debug,            cc: gcc-7.5,  cxx: g++-7,                                                    build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: ubuntu-18.04,   name: Ubuntu 18 gcc 7 Release,          cc: gcc-7.5,  cxx: g++-7,                                                    build_type: Release,   sudo: sudo, test_name: tests }
          - { os: ubuntu-18.04,   name: Ubuntu 18 gcc 8 Debug,            cc: gcc-8.4,  cxx: g++-8,                                                    build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: ubuntu-18.04,   name: Ubuntu 18 gcc 8 Release,          cc: gcc-8.4,  cxx: g++-8,                                                    build_type: Release,   sudo: sudo, test_name: tests }
          - { os: ubuntu-18.04,   name: Ubuntu 18 gcc 9 Debug,            cc: gcc-9.3,  cxx: g++-9,                                                    build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: ubuntu-18.04,   name: Ubuntu 18 gcc 9 Release,          cc: gcc-9.3,  cxx: g++-9,                                                    build_type: Release,   sudo: sudo, test_name: tests }
          - { os: ubuntu-18.04,   name: Ubuntu 18 gcc 10 Debug,           cc: gcc-10.2, cxx: g++-10,                                                   build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: ubuntu-18.04,   name: Ubuntu 18 gcc 10 Release,         cc: gcc-10.2, cxx: g++-10,                                                   build_type: Release,   sudo: sudo, test_name: tests }
          - { os: ubuntu-18.04,   name: Ubuntu 18 clang 8 Debug,          cc: clang-8,  cxx: clang++-8,                                                build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: ubuntu-18.04,   name: Ubuntu 18 clang 8 Release,        cc: clang-8,  cxx: clang++-8,                                                build_type: Release,   sudo: sudo, test_name: tests } 
          - { os: ubuntu-18.04,   name: Ubuntu 18 clang 9 Debug,          cc: clang-9,  cxx: clang++-9,                                                build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: ubuntu-18.04,   name: Ubuntu 18 clang 9 Release,        cc: clang-9,  cxx: clang++-9,                                                build_type: Release,   sudo: sudo, test_name: tests }          

          - { os: ubuntu-16.04,   name: Ubuntu 16 gcc 7 Debug,            cc: gcc-7.5,  cxx: g++-7,                                                    build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: ubuntu-16.04,   name: Ubuntu 16 gcc 7 Release,          cc: gcc-7.5,  cxx: g++-7,                                                    build_type: Release,   sudo: sudo, test_name: tests }
          - { os: ubuntu-16.04,   name: Ubuntu 16 gcc 8 Debug,            cc: gcc-8.4,  cxx: g++-8,                                                    build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: ubuntu-16.04,   name: Ubuntu 16 gcc 8 Release,          cc: gcc-8.4,  cxx: g++-8,                                                    build_type: Release,   sudo: sudo, test_name: tests }
          - { os: ubuntu-16.04,   name: Ubuntu 16 gcc 9 Debug,            cc: gcc-9.3,  cxx: g++-9,                                                    build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: ubuntu-16.04,   name: Ubuntu 16 gcc 9 Release,          cc: gcc-9.3,  cxx: g++-9,                                                    build_type: Release,   sudo: sudo, test_name: tests }
          - { os: ubuntu-16.04,   name: Ubuntu 16 clang 8 Debug,          cc: clang-8,  cxx: clang++-8,                                                build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: ubuntu-16.04,   name: Ubuntu 16 clang 8 Release,        cc: clang-8,  cxx: clang++-8,                                                build_type: Release,   sudo: sudo, test_name: tests } 
          - { os: ubuntu-16.04,   name: Ubuntu 16 clang 9 Debug,          cc: clang-9,  cxx: clang++-9,                                                build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: ubuntu-16.04,   name: Ubuntu 16 clang 9 Release,        cc: clang-9,  cxx: clang++-9,                                                build_type: Release,   sudo: sudo, test_name: tests } 
 

          - { os: macos-10.15,    name: macOS 10.15 gcc 8 Debug,          cc: gcc-8,    cxx: g++-8,                                                    build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: macos-10.15,    name: macOS 10.15 gcc 8 Release,        cc: gcc-8,    cxx: g++-8,                                                    build_type: Release,   sudo: sudo, test_name: tests } 
          - { os: macos-10.15,    name: macOS 10.15 gcc 9 Debug,          cc: gcc-9,    cxx: g++-9,                                                    build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: macos-10.15,    name: macOS 10.15 gcc 9 Release,        cc: gcc-9,    cxx: g++-9,                                                    build_type: Release,   sudo: sudo, test_name: tests } 
          - { os: macos-10.15,    name: macOS 10.15 clang 11 Debug,       cc: /usr/local/opt/llvm/bin/clang,  cxx: /usr/local/opt/llvm/bin/clang++,    build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: macos-10.15,    name: macOS 10.15 clang 11 Release,     cc: /usr/local/opt/llvm/bin/clang,  cxx: /usr/local/opt/llvm/bin/clang++,    build_type: Release,   sudo: sudo, test_name: tests } 
          - { os: macos-10.15,    name: macOS 10.15 Apple Clang Debug,    cc: clang,    cxx: clang++,                                                  build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: macos-10.15,    name: macOS 10.15 Apple Clang Release,  cc: clang,    cxx: clang++,                                                  build_type: Release,   sudo: sudo, test_name: tests } 

          - { os: macos-11.0,     name: macOS 11.0 gcc 8 Debug,           cc: gcc-8,    cxx: g++-8,                                                    build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: macos-11.0,     name: macOS 11.0 gcc 8 Release,         cc: gcc-8,    cxx: g++-8,                                                    build_type: Release,   sudo: sudo, test_name: tests } 
          - { os: macos-11.0,     name: macOS 11.0 gcc 9 Debug,           cc: gcc-9,    cxx: g++-9,                                                    build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: macos-11.0,     name: macOS 11.0 gcc 9 Release,         cc: gcc-9,    cxx: g++-9,                                                    build_type: Release,   sudo: sudo, test_name: tests } 
          - { os: macos-11.0,     name: macOS 11.0 clang 11 Debug,        cc: /usr/local/opt/llvm/bin/clang,  cxx: /usr/local/opt/llvm/bin/clang++,    build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: macos-11.0,     name: macOS 11.0 clang 11 Release,      cc: /usr/local/opt/llvm/bin/clang,  cxx: /usr/local/opt/llvm/bin/clang++,    build_type: Release,   sudo: sudo, test_name: tests } 
          - { os: macos-11.0,     name: macOS 11.0 Apple Clang Debug,     cc: clang,    cxx: clang++,                                                  build_type: Debug,     sudo: sudo, test_name: tests }
          - { os: macos-11.0,     name: macOS 11.0 Apple Clang Release,   cc: clang,    cxx: clang++,                                                  build_type: Release,   sudo: sudo, test_name: tests } 

          - { os: windows-latest, name: Windows cl Debug,                 cc: cl,       cxx: cl,                                                       build_type: Debug,     sudo: , test_name: RUN_TESTS } 
          - { os: windows-latest, name: Windows cl Release,               cc: cl,       cxx: cl,                                                       build_type: Release,   sudo: , test_name: RUN_TESTS }
          - { os: windows-latest, name: Windows clang Debug,              cc: clang-cl, cxx: clang-cl,                                                 build_type: Debug,     sudo: , test_name: RUN_TESTS }
          - { os: windows-latest, name: Windows clang Release,            cc: clang-cl, cxx: clang-cl,                                                 build_type: Release,   sudo: , test_name: RUN_TESTS }   
          

    steps:
    #Checkout this repo
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        path: main

    #Checkout Catch
    - name: Checkout Catch
      uses: actions/checkout@v2
      with:
        repository: 'catchorg/Catch2'
        ref: 'v2.x'
        path: Catch2

    #Install catch via cmake
    - name: Install Catch
      run: |
        cd Catch2
        cmake -Bbuild -S. -DBUILD_TESTING=OFF
        ${{ matrix.config.sudo }} cmake --build build/ --target install
      
    #Create the directory for our builds and tests
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    #Have cmake generate a makefile (or visual studio project on windows) with the appropriate build type and compiler
    - name: Configure CMake
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake ${{runner.workspace}}/Units/main/tests -DCMAKE_BUILD_TYPE="${{ matrix.config.build-type }}" -DCMAKE_CXX_COMPILER="${{ matrix.config.cxx }}"

    #Have cmake build our test binaries
    - name: Build
      working-directory: ${{runner.workspace}}/build
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config "${{ matrix.config.build-type }}"

    #Run the tests.
    - name: Run Tests
      working-directory: ${{runner.workspace}}/build
      if: matrix.config.os != 'windows-latest'
      # Execute tests defined by the CMake configuration. 
      run: cmake --build . --config "${{ matrix.config.build-type }}" --target "${{ matrix.config.build.test_name }}"